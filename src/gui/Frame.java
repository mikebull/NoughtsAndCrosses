package gui;

import java.awt.Color;
import java.awt.event.MouseEvent;
import javax.swing.*;
import logic.*;

public class Frame extends JFrame {
    private MouseEvent evt;
    private JLabel label;
    private Facade facade;
    private FiniteStateMachine.State cross;
    private FiniteStateMachine.State nought;
    private logic.Action action = null;
    private boolean[][] cellClicked = new boolean[3][3];
    private boolean gameOver;
    private JLabel square[][];
    private String gameResult;
    private int playerScore = 0;
    private int agentScore = 0;

    public Frame() {
        action = null;
        cellClicked = new boolean[3][3];
        playerScore = 0;
        agentScore = 0;
        initComponents();
        setSize(400, 300);
        setLocation(200, 200);
        
        gamePanel.setImage(new ImageIcon(".//src//resources//bg-light.jpg").getImage());
        
        emptyPanel.setImage(new ImageIcon(".//src//resources//bg.jpg").getImage());
        scorePanel.setImage(new ImageIcon(".//src//resources//bg.jpg").getImage());
        newButtonPanel.setImage(new ImageIcon(".//src//resources//bg.jpg").getImage());

        facade = new Facade();
        label = new JLabel();
        square = new JLabel[3][3];
        square[0][0] = grid11;
        square[0][1] = grid12;
        square[0][2] = grid13;
        square[1][0] = grid21;
        square[1][1] = grid22;
        square[1][2] = grid23;
        square[2][0] = grid31;
        square[2][1] = grid32;
        square[2][2] = grid33;
        for(int i = 0; i < 3; i++) {
            for(int j = 0; j < 3; j++) {
                cellClicked[i][j] = false;
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gamePanel = new ImagePanel();
        grid11 = new javax.swing.JLabel();
        grid12 = new javax.swing.JLabel();
        grid13 = new javax.swing.JLabel();
        grid21 = new javax.swing.JLabel();
        grid22 = new javax.swing.JLabel();
        grid23 = new javax.swing.JLabel();
        grid31 = new javax.swing.JLabel();
        grid32 = new javax.swing.JLabel();
        grid33 = new javax.swing.JLabel();
        controlPanel = new ImagePanel();
        emptyPanel = new ImagePanel();
        scorePanel = new ImagePanel();
        playerLabel = new javax.swing.JLabel();
        PlayerScore = new javax.swing.JLabel();
        agentLabel = new javax.swing.JLabel();
        AgentScore = new javax.swing.JLabel();
        newButtonPanel = new ImagePanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agent Frame");

        gamePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        gamePanel.setLayout(new java.awt.GridLayout(3, 3));

        grid11.setFont(new java.awt.Font("Arial", 0, 36));
        grid11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grid11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grid11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid11MouseClicked(evt);
            }
        });
        gamePanel.add(grid11);

        grid12.setFont(new java.awt.Font("Arial", 0, 36));
        grid12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grid12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grid12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid12MouseClicked(evt);
            }
        });
        gamePanel.add(grid12);

        grid13.setFont(new java.awt.Font("Arial", 0, 36));
        grid13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grid13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grid13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid13MouseClicked(evt);
            }
        });
        gamePanel.add(grid13);

        grid21.setFont(new java.awt.Font("Arial", 0, 36));
        grid21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grid21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grid21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid21MouseClicked(evt);
            }
        });
        gamePanel.add(grid21);

        grid22.setFont(new java.awt.Font("Arial", 0, 36));
        grid22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grid22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grid22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid22MouseClicked(evt);
            }
        });
        gamePanel.add(grid22);

        grid23.setFont(new java.awt.Font("Arial", 0, 36));
        grid23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grid23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grid23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid23MouseClicked(evt);
            }
        });
        gamePanel.add(grid23);

        grid31.setFont(new java.awt.Font("Arial", 0, 36));
        grid31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grid31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grid31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid31MouseClicked(evt);
            }
        });
        gamePanel.add(grid31);

        grid32.setFont(new java.awt.Font("Arial", 0, 36));
        grid32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grid32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grid32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid32MouseClicked(evt);
            }
        });
        gamePanel.add(grid32);

        grid33.setFont(new java.awt.Font("Arial", 0, 36));
        grid33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grid33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grid33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid33MouseClicked(evt);
            }
        });
        gamePanel.add(grid33);

        getContentPane().add(gamePanel, java.awt.BorderLayout.CENTER);

        controlPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        controlPanel.setLayout(new java.awt.BorderLayout());

        emptyPanel.setLayout(new java.awt.GridLayout(2, 2));
        controlPanel.add(emptyPanel, java.awt.BorderLayout.CENTER);

        scorePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Scores"));
        scorePanel.setForeground(new java.awt.Color(255, 255, 255));
        scorePanel.setFont(new java.awt.Font("Arial", 1, 12));
        scorePanel.setLayout(new java.awt.GridLayout(2, 2));

        playerLabel.setForeground(new java.awt.Color(255, 255, 255));
        playerLabel.setText("Player  : ");
        scorePanel.add(playerLabel);

        PlayerScore.setForeground(new java.awt.Color(255, 255, 255));
        PlayerScore.setText("  0");
        scorePanel.add(PlayerScore);

        agentLabel.setForeground(new java.awt.Color(255, 255, 255));
        agentLabel.setText("Agent  :");
        scorePanel.add(agentLabel);

        AgentScore.setForeground(new java.awt.Color(255, 255, 255));
        AgentScore.setText("  0");
        scorePanel.add(AgentScore);

        controlPanel.add(scorePanel, java.awt.BorderLayout.NORTH);

        jButton1.setFont(new java.awt.Font("Arial", 1, 12));
        jButton1.setText("New Game");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        newButtonPanel.add(jButton1);

        controlPanel.add(newButtonPanel, java.awt.BorderLayout.SOUTH);

        getContentPane().add(controlPanel, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        resetGame();    
    }//GEN-LAST:event_jButton1MouseClicked

    private void grid33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid33MouseClicked
        // TODO add your handling code here:
        handleGridMouseClick(2, 2, evt);
    }//GEN-LAST:event_grid33MouseClicked

    private void grid32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid32MouseClicked
        // TODO add your handling code here:
        handleGridMouseClick(2, 1, evt);
    }//GEN-LAST:event_grid32MouseClicked

    private void grid31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid31MouseClicked
        // TODO add your handling code here:
        handleGridMouseClick(2, 0, evt);
    }//GEN-LAST:event_grid31MouseClicked

    private void grid23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid23MouseClicked
        // TODO add your handling code here:
        handleGridMouseClick(1, 2, evt);
    }//GEN-LAST:event_grid23MouseClicked

    private void grid22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid22MouseClicked
        // TODO add your handling code here:
        handleGridMouseClick(1, 1, evt);
    }//GEN-LAST:event_grid22MouseClicked

    private void grid21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid21MouseClicked
        // TODO add your handling code here:
        handleGridMouseClick(1, 0, evt);
    }//GEN-LAST:event_grid21MouseClicked

    private void grid13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid13MouseClicked
        // TODO add your handling code here:
        handleGridMouseClick(0, 2, evt);
    }//GEN-LAST:event_grid13MouseClicked

    private void grid12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid12MouseClicked
        // TODO add your handling code here:
        handleGridMouseClick(0, 1, evt);
    }//GEN-LAST:event_grid12MouseClicked

    private void grid11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid11MouseClicked
        // TODO add your handling code here:
        handleGridMouseClick(0, 0, evt);
    }//GEN-LAST:event_grid11MouseClicked
    
    public void handleGridMouseClick(int firstIndex, int secondIndex, MouseEvent evt) {
        // If cell has not already been clicked
        if(!cellClicked[firstIndex][secondIndex]) {
            // Perform the Human Move
            JLabel label = getLabel(firstIndex, secondIndex);
            label.setOpaque(true);
            label.setBackground(new Color(51, 102, 255, 50));
            label.setText("X");
            facade.updateFiniteStateMachine(firstIndex, secondIndex, logic.FiniteStateMachine.State.cross);
            
            // Prevent cell being clicked more than once
            cellClicked[firstIndex][secondIndex] = true;

            // If I'm lucky, you'll never see this message
            fireRules("Congratulations, you win!");

            // If human has won or it is a draw reset game
            if(gameOver) {
                resetGame();
            } else {
                logic.Action act = facade.getAgentMove();
                label = getLabel(act.getRow(), act.getColumn());
                label.setOpaque(true);
                label.setBackground(new Color(245,184,0,50));
                //label.setIcon(new ImageIcon("C://Samsung//o.gif"));
                label.setText("O");
                facade.updateFiniteStateMachine(act.getRow(), act.getColumn(), logic.FiniteStateMachine.State.nought);
                cellClicked[act.getRow()][act.getColumn()] = true;
                fireRules("Unlucky, the Agent wins!");
                if(gameOver) {
                    label.setOpaque(false);
                    label.setBackground(null);
                    resetGame();
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    private JLabel getLabel(int firstIndex, int secondIndex) {
        return square[firstIndex][secondIndex];
    }

    private void fireRules(String winner) {
        if(facade.fireGameWonRule()) {
            gameResult = winner;
            if(gameResult.equals("Congratulations, you win!")) {
                playerScore += 1;
                PlayerScore.setText(Integer.toString(playerScore));
            } else if(gameResult.equals("Unlucky, the Agent wins!")) {
                agentScore += 1;
                AgentScore.setText(Integer.toString(agentScore));
            }
            JOptionPane.showMessageDialog(null, gameResult); 
            gameOver = true ;
            gameResult = "";
        } else if(facade.fireGameDrawnRule()) {
            gameResult = "It's a Draw!";
            JOptionPane.showMessageDialog(null, gameResult);
            gameOver = true ;
        }
    }

    private void resetGame() {
        gameOver = false;
        
        grid11.setText("");
        grid12.setText("");
        grid13.setText("");
        grid21.setText("");
        grid22.setText("");
        grid23.setText("");
        grid31.setText("");
        grid32.setText("");
        grid33.setText("");
        
        grid11.setOpaque(false);
        grid12.setOpaque(false);
        grid13.setOpaque(false);
        grid21.setOpaque(false);
        grid22.setOpaque(false);
        grid23.setOpaque(false);
        grid31.setOpaque(false);
        grid32.setOpaque(false);
        grid33.setOpaque(false);
        grid33.setOpaque(false);

        for(int i = 0; i < 3; i++) {
            for(int j = 0 ; j < 3; j++) {
                facade.updateFiniteStateMachine(i, j, FiniteStateMachine.State.blank);
                cellClicked[i][j]= false;
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AgentScore;
    private javax.swing.JLabel PlayerScore;
    private javax.swing.JLabel agentLabel;
    private ImagePanel controlPanel;
    private ImagePanel emptyPanel;
    private ImagePanel gamePanel;
    private javax.swing.JLabel grid11;
    private javax.swing.JLabel grid12;
    private javax.swing.JLabel grid13;
    private javax.swing.JLabel grid21;
    private javax.swing.JLabel grid22;
    private javax.swing.JLabel grid23;
    private javax.swing.JLabel grid31;
    private javax.swing.JLabel grid32;
    private javax.swing.JLabel grid33;
    private javax.swing.JButton jButton1;
    private ImagePanel newButtonPanel;
    private javax.swing.JLabel playerLabel;
    private ImagePanel scorePanel;
    // End of variables declaration//GEN-END:variables
    
}
